<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bQL66404AAAAAElFTkSuQmCC
</value>
  </data>
</root>